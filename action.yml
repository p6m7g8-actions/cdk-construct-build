name: "Build Composite Action"
description: "P6 Action: Build a CDK Construct"
inputs:
  aws_region:
    description: "AWS region for deployment"
    required: false
    default: "us-east-1"
  aws_role:
    description: "AWS role to assume"
    required: false
  aws_session_name:
    description: "Session name for the AWS role"
    required: false
  cdk_deploy_account:
    description: "AWS CDK deploy account"
    required: false
  cdk_deploy_region:
    description: "AWS CDK deploy region"
    required: false
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
    - name: Restore NPM node_modules cache
      uses: actions/cache@v4.1.2
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-
    - name: Corepack
      shell: bash
      run: |
        sudo corepack enable
    - name: Check Node
      shell: bash
      run: |
        set +e
        which node
        which npm
        which yarn
        which corepack
        node -v
        npm -v
        yarn --version
        corepack --version
        echo $PATH
    - name: Install node_modules
      shell: bash
      run: |
        yarn install
    - name: Cache NPM dependencies
      uses: actions/cache@v4.1.2
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-
    - name: Assume role using OIDC
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.aws_role }}
        role-session-name: ${{ inputs.aws_session_name }}
    - name: Run build
      shell: bash
      env:
        CDK_DEPLOY_ACCOUNT: ${{ inputs.cdk_deploy_account }}
        CDK_DEPLOY_REGION: ${{ inputs.cdk_deploy_region }}
        CDK_DEFAULT_ACCOUNT: ${{ inputs.cdk_deploy_account }}
        CDK_DEFAULT_REGION: ${{ inputs.cdk_deploy_region }}
        AWS_REGION: ${{ inputs.aws_region }}
      run: yarn run ci:gha
    - name: Run Package
      shell: bash
      run: yarn run jsii:pacmak:parallel
